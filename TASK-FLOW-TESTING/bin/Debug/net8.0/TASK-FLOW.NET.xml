<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TASK-FLOW.NET</name>
    </assembly>
    <members>
        <member name="M:TASK_FLOW.NET.Auth.Controller.AuthController.Login(TASK_FLOW.NET.Auth.DTO.AuthPropsDTO)">
            <summary>
            Login User 
            </summary>
            <param name="body"></param>
            <returns>User Token</returns>
            <response code="200">Ok</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:TASK_FLOW.NET.Auth.Controller.AuthController.GetProfile">
            <summary>
            Get Profile
            </summary>
            <returns>Return the Username of User</returns>
            <response code="200">Ok</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:TASK_FLOW.NET.Auth.Controller.AuthController.LogOut">
            <summary>
            Log Out
            </summary>
            <returns>200</returns>
            <response code="200">Ok</response>
            <response code="401">Unauthorized</response>
        </member>
        <member name="M:TASK_FLOW.NET.Auth.Controller.AuthController.RefreshToken">
            <summary>
            Refresh Token
            </summary>
            <returns>200</returns>
            <response code = "200">Ok</response>
            <response code = "401">Unauthorized</response>
        </member>
        <member name="T:TASK_FLOW.NET.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:TASK_FLOW.NET.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TASK_FLOW.NET.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TASK_FLOW.NET.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TASK_FLOW.NET.Project.Controller.ProjectController.CreateProject(TASK_FLOW.NET.Project.DTO.CreateProjectDTO)">
            <summary>
            Create Project
            </summary>
            <param name="body"></param>
            <returns>Save a Project</returns>
            <response code= "201">Created</response>
            <response code= "400">BadRequest</response>
        </member>
        <member name="M:TASK_FLOW.NET.Project.Controller.ProjectController.GetAllProject">
            <summary>
            Get All Project
            </summary>
            <returns>List of Project</returns>
            <response code= "200">Ok</response>
            <response code= "400">Bad Request</response>
        </member>
        <member name="M:TASK_FLOW.NET.Project.Controller.ProjectController.GetProjectById(System.Int32)">
            <summary>
            Get project by id
            </summary>
            <param name="id"></param>
            <returns>Return a project according his id</returns>
            <response code= "200">Ok</response>
            <response code= "404">Not found</response>
        </member>
        <member name="M:TASK_FLOW.NET.Project.Controller.ProjectController.UpdateProject(System.Int32,TASK_FLOW.NET.Project.DTO.UpdateProjectDTO)">
            <summary>
            Update Project
            </summary>
            <param name="id"></param>
            <param name="body"></param>
            <returns>Update a Project</returns>
            <response code= "204">No content</response>
            <response code= "404">Not found</response>
        </member>
        <member name="M:TASK_FLOW.NET.Project.Controller.ProjectController.DeleteProject(System.Int32)">
            <summary>
            Delete Project
            </summary>
            <param name="id"></param>
            <returns>Delete a project</returns>
            <response code= "204">No Content</response>
            <response code= "404">Not found</response>
        </member>
        <member name="M:TASK_FLOW.NET.Tasks.Controller.TaskController.CreateTask(System.Int32,TASK_FLOW.NET.Tasks.DTOs.CreateTaskDTO)">
            <summary>
            Create a new Task
            </summary>
            <param name="ProjectId"></param>
            <param name="body"></param>
            <returns>Save a task</returns>
            <response code = "201">Created</response>
            <response code = "400">Bad Request</response>
        </member>
        <member name="M:TASK_FLOW.NET.Tasks.Controller.TaskController.GetAllTAsk">
            <summary>
            Get all Tasks
            </summary>
            <returns>List of all tasks</returns>
            <response code = "200">Ok</response>
            <response code = "400">Bad Request</response>
        </member>
        <member name="M:TASK_FLOW.NET.Tasks.Controller.TaskController.GetTaskById(System.Int32)">
            <summary>
            Get task by id
            </summary>
            <param name="id"></param>
            <returns>Return a task according his Id number</returns>
            <response code = "200">Ok</response>
            <response code = "404">Not found</response>
        </member>
        <member name="M:TASK_FLOW.NET.Tasks.Controller.TaskController.UpdateTask(System.Int32,TASK_FLOW.NET.Tasks.DTOs.UpdateTaskDTO)">
            <summary>
            Update Task
            </summary>
            <param name="id"></param>
            <param name="body"></param>
            <returns>Nothing</returns>
            <response code = "204">No content</response>
            <response code = "404">Not found</response>
        </member>
        <member name="M:TASK_FLOW.NET.Tasks.Controller.TaskController.DeleteTask(System.Int32)">
            <summary>
            Delete task
            </summary>
            <param name="id"></param>
            <returns>No Content</returns>
            <response code = "204">No content</response>
            <response code = "404">Not found</response>
        </member>
        <member name="M:TASK_FLOW.NET.UserProject.Controllers.UserProjectController.RegisterUserAndProject(TASK_FLOW.NET.UserProject.DTO.UserProjectDTO)">
            <summary>
            Relation Project
            </summary>
            <returns>Relation between a User and a Project with a Access Level</returns>
            <response code="200">Relation finished successfully</response>
            <response code="400">Relation Faild</response>
        </member>
        <member name="M:TASK_FLOW.NET.User.Controller.UserController.RegisterUser(TASK_FLOW.NET.User.DTO.CreateUserDTO)">
            <summary>
            Register a new User
            </summary>
            <param name="body"></param>
            <returns>A new User registered</returns>
            <response code="201">User Registered</response>
            <response code="409">Conflict between repeat dates</response>
        </member>
        <member name="M:TASK_FLOW.NET.User.Controller.UserController.GetAllUser">
            <summary>
            Get All User
            </summary>
            <returns>A List of All Users</returns>
            <response code="200">List of User</response>
            <response code="400">Bad Request</response>
        </member>
        <member name="M:TASK_FLOW.NET.User.Controller.UserController.GetUserById(System.Int32)">
            <summary>
            Get User by Id
            </summary>
            <param name="id"></param>
            <returns>Get a user according his Id</returns>
            <response code="200">User</response>
            <response code="404">User not Found</response>
        </member>
        <member name="M:TASK_FLOW.NET.User.Controller.UserController.UpdateUser(System.Int32,TASK_FLOW.NET.User.DTO.UpdateUserDTO)">
            <summary>
            Update User 
            </summary>
            <param name="id"></param>
            <param name="body"></param>
            <returns>Update a user according his id </returns>
            <response code="204">User Updated</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:TASK_FLOW.NET.User.Controller.UserController.DelteUser(System.Int32)">
            <summary>
            Delte User
            </summary>
            <param name="id"></param>
            <returns>Delete a User according his Id</returns>
            <response code="204">User Deleted</response>
            <response code="404">User Not Found</response>
        </member>
    </members>
</doc>
